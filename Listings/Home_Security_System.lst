C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HOME_SECURITY_SYSTEM
OBJECT MODULE PLACED IN .\Objects\Home_Security_System.obj
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE Home_Security_System.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\Home_Security_System.lst) TABS(2) OBJECT(.\Objects\Home_Security_System.obj)

line level    source

   1          //////////////////////////////////
   2          //     Home Security System     //
   3          //////////////////////////////////
   4          
   5          #include <reg51.h>
   6          
   7          
   8          #define COMMAND 0
   9          #define LCD_DATA 1
  10          
  11          //Declaring Port Pins
  12          //P0
  13          sbit ARM = P0^0;
  14          //P1
  15          sbit LED0 = P1^0;
  16          sbit LED1 = P1^1;
  17          sbit LaserSwitch = P1^2;
  18          sbit EncB = P1^3;
  19          sbit GREEN = P1^5;
  20          sbit YELLOW = P1^6;
  21          sbit RED = P1^7;
  22          //P2
  23          #define ldata P2
  24          sbit busy = P2^7; // connected to DB7 on the LCD
  25          //P3
  26          sbit EncA = P3^2;
  27          sbit BREAK = P3^3;
  28          sbit rw = P3^5;
  29          sbit rs = P3^6;
  30          sbit en = P3^7;
  31          
  32          //variables
  33          bit dir;
  34          
  35          
  36          
  37          //State Functions
  38          void disarmedState();
  39          void updateTimerState();
  40          void armedState();
  41          void countdownState();
  42          void intruderState();
  43          
  44          //Function Prototypes
  45          void init_lcd();//initialize LCD
  46          void write_to_lcd(unsigned char value, bit mode);//write data or command
  47          void MSDelay(unsigned int itime);//delay 1 ms
  48          void lcdready(void);//check if lcd is ready to write to
  49          void display(int time, int status);
  50          void updateTimer(int time);
  51          void updateLCD();
  52          void updateStatus();
  53          void turnOnLaser();
  54          void turnOffLaser();
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 2   

  55          void countDownTimer();
  56          void updateTimerLEDs();
  57          void turnOnAlarm();
  58          void turnOffAlarm();
  59          void flashIntruder();
  60          void soundAlarm();
  61          void resetTimer();
  62          
  63          
  64          /**************************************************************/
  65          void main(){
  66   1          while(1){
  67   2            case(){
*** ERROR C141 IN LINE 67 OF Home_Security_System.c: syntax error near ')'
  68   3                
  69   3              disarmedState();
  70   3              updateTimerState();
  71   3              armedState();
  72   3              countdownState();
  73   3              intruderState();
  74   3            }
  75   2          }
  76   1          
  77   1        
  78   1        
  79   1      
  80   1      
  81   1      }
  82          /**************************************************************/
  83          
  84          
  85          void disarmedState()
  86          {
  87   1      }
  88          void updateTimerState()
  89          {
  90   1      }
  91          void armedState()
  92          {
  93   1      }
  94          void countdownState()
  95          {
  96   1      }
  97          void intruderState()
  98          {
  99   1      }
 100          
 101          
 102          
 103          
 104          ////////////////////////////////////////////////////////////////
 105          //               LCD  Helper Functions                        //
 106          ////////////////////////////////////////////////////////////////
 107          
 108          void display(int time, int status){
 109   1        unsigned int count;
 110   1        
 111   1        //Initializing every decimal place to 0
 112   1        char msb= 0x39;
 113   1        char lsb = 0x39;
 114   1        
 115   1        unsigned char code timer[]="Timer:NA seconds";
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 3   

 116   1        unsigned char code armed[]="Armed";
 117   1        unsigned char code disarmed[]="Disarmed";
 118   1        unsigned char code intruder[]="Intruder!";
 119   1        unsigned char t,a,d,i =0;
 120   1        
 121   1        init_lcd();                                                                                       
 122   1        
 123   1        //Writing first line
 124   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
 125   1        while (timer[t]!='\0') 
 126   1         write_to_lcd(timer[i++],LCD_DATA);
 127   1        
 128   1        //Writing second line
 129   1        write_to_lcd(0xC0,COMMAND); //Move cursor to start of second line
 130   1        
 131   1        if (status == 0)
 132   1        { 
 133   2          while (armed[a]!='\0') 
 134   2           write_to_lcd(armed[a++],LCD_DATA);
 135   2        }
 136   1        else if (status == 0)
 137   1        { 
 138   2          while (disarmed[d]!='\0') 
 139   2           write_to_lcd(disarmed[d++],LCD_DATA);
 140   2        }
 141   1        else
 142   1        { 
 143   2          while (intruder[i]!='\0') 
 144   2           write_to_lcd(intruder[i++],LCD_DATA);
 145   2        }
 146   1        
 147   1        for (count = time; count >= 0; count--){    
 148   2          if (lsb < 0x30){
 149   3            lsb = 0x39;
 150   3            msb--;
 151   3            if (msb < 0x30){
 152   4              msb = 0x39;
 153   4            }
 154   3          }
 155   2          
 156   2          write_to_lcd(0x86,COMMAND); //Write to sceond line
 157   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 158   2          write_to_lcd(lsb,LCD_DATA);
 159   2          
 160   2          lsb--; //Deccrementing least significant bit
 161   2          
 162   2          MSDelay(100); //Replace with internal timer delay    
 163   2        }
 164   1      }
 165          
 166          void updateTimer(int time){
 167   1        unsigned int count;
 168   1        
 169   1        //Initializing every decimal place to 0
 170   1        char msb= 0x39;
 171   1        char lsb = 0x39;
 172   1        
 173   1        unsigned char code timer[]="Timer:NA seconds";
 174   1        unsigned char code armed[]="Armed";
 175   1        unsigned char code disarmed[]="Disarmed";
 176   1        unsigned char code intruder[]="Intruder!";
 177   1        unsigned char t,a,d,i =0;
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 4   

 178   1        
 179   1        init_lcd();                                                                                       
 180   1        
 181   1        //Writing first line
 182   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
 183   1        while (timer[t]!='\0') 
 184   1         write_to_lcd(timer[i++],LCD_DATA);
 185   1        
 186   1        //Writing second line
 187   1        write_to_lcd(0xC0,COMMAND); //Move cursor to start of second line
 188   1        
 189   1        if (status == 0)
*** ERROR C202 IN LINE 189 OF Home_Security_System.c: 'status': undefined identifier
 190   1        { 
 191   2          while (armed[a]!='\0') 
 192   2           write_to_lcd(armed[a++],LCD_DATA);
 193   2        }
 194   1        else if (status == 0)
*** ERROR C202 IN LINE 194 OF Home_Security_System.c: 'status': undefined identifier
 195   1        { 
 196   2          while (disarmed[d]!='\0') 
 197   2           write_to_lcd(disarmed[d++],LCD_DATA);
 198   2        }
 199   1        else
 200   1        { 
 201   2          while (intruder[i]!='\0') 
 202   2           write_to_lcd(intruder[i++],LCD_DATA);
 203   2        }
 204   1        
 205   1        for (count = time; count >= 0; count--){    
 206   2          if (lsb < 0x30){
 207   3            lsb = 0x39;
 208   3            msb--;
 209   3            if (msb < 0x30){
 210   4              msb = 0x39;
 211   4            }
 212   3          }
 213   2          
 214   2          write_to_lcd(0x86,COMMAND); //Write to sceond line
 215   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 216   2          write_to_lcd(lsb,LCD_DATA);
 217   2          
 218   2          lsb--; //Deccrementing least significant bit
 219   2          
 220   2          MSDelay(100); //Replace with internal timer delay    
 221   2        }
 222   1      }
 223          
 224          
 225          //setup LCD for required display
 226          void init_lcd(){
 227   1        //all instructions here are commands, not data
 228   1        
 229   1        write_to_lcd(0x38,COMMAND);
 230   1      
 231   1        write_to_lcd(0x0E,COMMAND);
 232   1        
 233   1        write_to_lcd(0x06,COMMAND);
 234   1        //clear display and return cursor to home position
 235   1        write_to_lcd(0x01,COMMAND);
 236   1      }
 237          
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 5   

 238          void write_to_lcd(unsigned char value, bit mode){
 239   1          lcdready();
 240   1        ldata = value;
 241   1        rs = mode; //1 for data, 0 for command
 242   1        rw = 0;
 243   1        en = 1;
 244   1        MSDelay(1);
 245   1        en = 0;
 246   1      }
 247          void MSDelay(unsigned int itime){
 248   1        unsigned i, j;
 249   1        for(i=0;i<itime;i++)
 250   1          for(j=0;j<1275;j++);
 251   1      
 252   1      }
 253          void lcdready(){
 254   1        busy = 1;
 255   1        en = 1;
 256   1        rs = 0;//command
 257   1        rw = 1;//read command
 258   1        while(busy){
 259   2          en = 0;
 260   2          MSDelay(1);
 261   2          en = 1;
 262   2        }
 263   1        en = 0;
 264   1        rw = 0;
 265   1      }
 266          
 267          void updateLCD()
 268          {
 269   1      }
 270          void updateStatus()
 271          {
 272   1      }
 273          void turnOnLaser()
 274          {
 275   1      }
 276          void turnOffLaser()
 277          {
 278   1      }
 279          void countDownTimer()
 280          {
 281   1      }
 282          void updateTimerLEDs()
 283          {
 284   1      }
 285          void turnOnAlarm()
 286          {
 287   1      }
 288          void turnOffAlarm()
 289          {
 290   1      }
 291          void flashIntruder()
 292          {
 293   1      }
 294          void soundAlarm()
 295          {
 296   1      }
 297          void resetTimer()
 298          {
 299   1      }
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:49:43 PAGE 6   


C51 COMPILATION COMPLETE.  0 WARNING(S),  3 ERROR(S)
