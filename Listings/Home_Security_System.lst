C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:42:46 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HOME_SECURITY_SYSTEM
OBJECT MODULE PLACED IN .\Objects\Home_Security_System.obj
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE Home_Security_System.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\Home_Security_System.lst) TABS(2) OBJECT(.\Objects\Home_Security_System.obj)

line level    source

   1          //////////////////////////////////
   2          //     Home Security System     //
   3          //////////////////////////////////
   4          
   5          #include <reg51.h>
   6          
   7          
   8          #define COMMAND 0
   9          #define LCD_DATA 1
  10          
  11          //Declaring Port Pins
  12          //P0
  13          sbit ARM = P0^0;
  14          //P1
  15          sbit LED0 = P1^0;
  16          sbit LED1 = P1^1;
  17          sbit LaserSwitch = P1^2;
  18          sbit EncB = P1^3;
  19          sbit GREEN = P1^5;
  20          sbit YELLOW = P1^6;
  21          sbit RED = P1^7;
  22          //P2
  23          #define ldata P2
  24          sbit busy = P2^7; // connected to DB7 on the LCD
  25          //P3
  26          sbit EncA = P3^2;
  27          sbit BREAK = P3^3;
  28          sbit rw = P3^5;
  29          sbit rs = P3^6;
  30          sbit en = P3^7;
  31          
  32          //variables
  33          bit dir;
  34          
  35          
  36          
  37          
  38          
  39          //Function Prototypes
  40          void init_lcd();//initialize LCD
  41          void write_to_lcd(unsigned char value, bit mode);//write data or command
  42          void MSDelay(unsigned int itime);//delay 1 ms
  43          void lcdready(void);//check if lcd is ready to write to
  44          void display(int time, int status);
  45          void updateTimer(int time);
  46          void updateLCD();
  47          void updateStatus();
  48          void turnOnLaser();
  49          void turnOffLaser();
  50          void countDownTimer();
  51          void updateTimerLEDs();
  52          void turnOnAlarm();
  53          void turnOffAlarm();
  54          void flashIntruder();
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:42:46 PAGE 2   

  55          void soundAlarm();
  56          void resetTimer();
  57          
  58          
  59          /**************************************************************/
  60          void main(){
  61   1          while(1){
  62   2            display(60, 0);
  63   2          }
  64   1          
  65   1        
  66   1        
  67   1      
  68   1      
  69   1      }
  70          /**************************************************************/
  71          
  72          
  73          ////////////////////////////////////////////////////////////////
  74          //               LCD  Helper Functions                        //
  75          ////////////////////////////////////////////////////////////////
  76          
  77          void display(int time, int status){
  78   1        unsigned int count;
  79   1        
  80   1        //Initializing every decimal place to 0
  81   1        char msb= 0x39;
  82   1        char lsb = 0x39;
  83   1        
  84   1        unsigned char code timer[]="Timer:NA seconds";
  85   1        unsigned char code armed[]="Armed";
  86   1        unsigned char code disarmed[]="Disarmed";
  87   1        unsigned char code intruder[]="Intruder!";
  88   1        unsigned char t,a,d,i =0;
  89   1        
  90   1        init_lcd();                                                                                       
  91   1        
  92   1        //Writing first line
  93   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
  94   1        while (timer[t]!='\0') 
  95   1         write_to_lcd(timer[i++],LCD_DATA);
  96   1        
  97   1        //Writing second line
  98   1        write_to_lcd(0xC0,COMMAND); //Move cursor to start of second line
  99   1        
 100   1        if (status == 0)
 101   1        { 
 102   2          while (armed[a]!='\0') 
 103   2           write_to_lcd(armed[a++],LCD_DATA);
 104   2        }
 105   1        else if (status == 0)
 106   1        { 
 107   2          while (disarmed[d]!='\0') 
 108   2           write_to_lcd(disarmed[d++],LCD_DATA);
 109   2        }
 110   1        else
 111   1        { 
 112   2          while (intruder[i]!='\0') 
 113   2           write_to_lcd(intruder[i++],LCD_DATA);
 114   2        }
 115   1        
 116   1        for (count = time; count >= 0; count--){    
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:42:46 PAGE 3   

 117   2          if (lsb < 0x30){
 118   3            lsb = 0x39;
 119   3            msb--;
 120   3            if (msb < 0x30){
 121   4              msb = 0x39;
 122   4            }
 123   3          }
 124   2          
 125   2          write_to_lcd(0x86,COMMAND); //Write to sceond line
 126   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 127   2          write_to_lcd(lsb,LCD_DATA);
 128   2          
 129   2          lsb--; //Deccrementing least significant bit
 130   2          
 131   2          MSDelay(100); //Replace with internal timer delay    
 132   2        }
 133   1      }
 134          
 135          void updateTimer(int time){
 136   1        unsigned int count;
 137   1        
 138   1        //Initializing every decimal place to 0
 139   1        char msb= 0x39;
 140   1        char lsb = 0x39;
 141   1        
 142   1        unsigned char code timer[]="Timer:NA seconds";
 143   1        unsigned char code armed[]="Armed";
 144   1        unsigned char code disarmed[]="Disarmed";
 145   1        unsigned char code intruder[]="Intruder!";
 146   1        unsigned char t,a,d,i =0;
 147   1        
 148   1        init_lcd();                                                                                       
 149   1        
 150   1        //Writing first line
 151   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
 152   1        while (timer[t]!='\0') 
 153   1         write_to_lcd(timer[i++],LCD_DATA);
 154   1        
 155   1        //Writing second line
 156   1        write_to_lcd(0xC0,COMMAND); //Move cursor to start of second line
 157   1        
 158   1        if (status == 0)
*** ERROR C202 IN LINE 158 OF Home_Security_System.c: 'status': undefined identifier
 159   1        { 
 160   2          while (armed[a]!='\0') 
 161   2           write_to_lcd(armed[a++],LCD_DATA);
 162   2        }
 163   1        else if (status == 0)
*** ERROR C202 IN LINE 163 OF Home_Security_System.c: 'status': undefined identifier
 164   1        { 
 165   2          while (disarmed[d]!='\0') 
 166   2           write_to_lcd(disarmed[d++],LCD_DATA);
 167   2        }
 168   1        else
 169   1        { 
 170   2          while (intruder[i]!='\0') 
 171   2           write_to_lcd(intruder[i++],LCD_DATA);
 172   2        }
 173   1        
 174   1        for (count = time; count >= 0; count--){    
 175   2          if (lsb < 0x30){
 176   3            lsb = 0x39;
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:42:46 PAGE 4   

 177   3            msb--;
 178   3            if (msb < 0x30){
 179   4              msb = 0x39;
 180   4            }
 181   3          }
 182   2          
 183   2          write_to_lcd(0x86,COMMAND); //Write to sceond line
 184   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 185   2          write_to_lcd(lsb,LCD_DATA);
 186   2          
 187   2          lsb--; //Deccrementing least significant bit
 188   2          
 189   2          MSDelay(100); //Replace with internal timer delay    
 190   2        }
 191   1      }
 192          
 193          
 194          //setup LCD for required display
 195          void init_lcd(){
 196   1        //all instructions here are commands, not data
 197   1        
 198   1        write_to_lcd(0x38,COMMAND);
 199   1      
 200   1        write_to_lcd(0x0E,COMMAND);
 201   1        
 202   1        write_to_lcd(0x06,COMMAND);
 203   1        //clear display and return cursor to home position
 204   1        write_to_lcd(0x01,COMMAND);
 205   1      }
 206          
 207          void write_to_lcd(unsigned char value, bit mode){
 208   1          lcdready();
 209   1        ldata = value;
 210   1        rs = mode; //1 for data, 0 for command
 211   1        rw = 0;
 212   1        en = 1;
 213   1        MSDelay(1);
 214   1        en = 0;
 215   1      }
 216          void MSDelay(unsigned int itime){
 217   1        unsigned i, j;
 218   1        for(i=0;i<itime;i++)
 219   1          for(j=0;j<1275;j++);
 220   1      
 221   1      }
 222          void lcdready(){
 223   1        busy = 1;
 224   1        en = 1;
 225   1        rs = 0;//command
 226   1        rw = 1;//read command
 227   1        while(busy){
 228   2          en = 0;
 229   2          MSDelay(1);
 230   2          en = 1;
 231   2        }
 232   1        en = 0;
 233   1        rw = 0;
 234   1      }
 235          
 236          void updateLCD()
 237          {
 238   1      }
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 17:42:46 PAGE 5   

 239          void updateStatus()
 240          {
 241   1      }
 242          void turnOnLaser()
 243          {
 244   1      }
 245          void turnOffLaser()
 246          {
 247   1      }
 248          void countDownTimer()
 249          {
 250   1      }
 251          void updateTimerLEDs()
 252          {
 253   1      }
 254          void turnOnAlarm()
 255          {
 256   1      }
 257          void turnOffAlarm()
 258          {
 259   1      }
 260          void flashIntruder()
 261          {
 262   1      }
 263          void soundAlarm()
 264          {
 265   1      }
 266          void resetTimer()
 267          {
 268   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  2 ERROR(S)
