C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HOME_SECURITY_SYSTEM
OBJECT MODULE PLACED IN .\Objects\Home_Security_System.obj
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE Home_Security_System.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\Home_Security_System.lst) TABS(2) OBJECT(.\Objects\Home_Security_System.obj)

line level    source

   1          //////////////////////////////////
   2          //     Home Security System     //
   3          //////////////////////////////////
   4          
   5          #include <reg51.h>
   6          
   7          
   8          #define COMMAND 0
   9          #define LCD_DATA 1
  10          
  11          //Declaring Port Pins
  12          //P0
  13          sbit ARM = P0^0;
  14          //P1
  15          sbit LED0 = P1^0;
  16          sbit LED1 = P1^1;
  17          sbit LaserSwitch = P1^2;
  18          sbit EncB = P1^3;
  19          sbit GREEN = P1^5;
  20          sbit YELLOW = P1^6;
  21          sbit RED = P1^7;
  22          //P2
  23          #define ldata P2
  24          sbit busy = P2^7; // connected to DB7 on the LCD
  25          //P3
  26          sbit EncA = P3^2;
  27          sbit BREAK = P3^3;
  28          sbit rw = P3^5;
  29          sbit rs = P3^6;
  30          sbit en = P3^7;
  31          
  32          //variables
  33          bit dir;//1 = cw, 0 = ccw
  34          unsigned int delayVal = 0;
  35          //Interrupt functions
  36          void timer1(void) interrupt 3{//50ms 
  37   1        TR1 = 0;//turn timer off
  38   1        delayVal = delayVal - 1;//decrease delay value
  39   1        TH1 = 0x4B;//initial values
  40   1        TL1 = 0x92;
  41   1      }
  42          void encoder() interrupt 0//
  43          {
  44   1        if(EncB == 1)
  45   1          dir = 1;
  46   1        else
  47   1          dir = 0;
  48   1      }
  49          void breakBeam() interrupt 2
  50          {
  51   1        
  52   1      }
  53          void delay()//delay 1 second
  54          {
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 2   

  55   1        delayVal = 20;
  56   1        while(delayVal > 0)
  57   1        {
  58   2          TR1 = 1;
  59   2        }
  60   1        TR1 = 0;
  61   1        
  62   1      }
  63          
  64          //State Functions
  65          void disarmedState();
  66          void updateTimerState();
  67          void armedState();
  68          void countdownState();
  69          void intruderState();
  70          
  71          //Function Prototypes
  72          void init_lcd();//initialize LCD
  73          void write_to_lcd(unsigned char value, bit mode);//write data or command
  74          void MSDelay(unsigned int itime);//delay 1 ms
  75          void lcdready(void);//check if lcd is ready to write to
  76          void updateTimer(int time);
  77          void updateLCD();
  78          void displayArmed();
  79          void displayDisarmed();
  80          void displayIntruder();
  81          void turnOnLaser();
  82          void turnOffLaser();
  83          void countDownTimer(int num);
  84          void updateTimerLEDs();
  85          void turnOnAlarm();
  86          void turnOffAlarm();
  87          void flashIntruder();
  88          void soundAlarm();
  89          void resetTimer();
  90          
  91          
  92          /**************************************************************/
  93          void main(){
  94   1        //Interrupt enable
  95   1        EA = 1;
  96   1        ET1 = 1;
  97   1        //Timer enable
  98   1        TMOD = 0x10;//timer 1 mode 1
  99   1        TH1 = 0x4B;//high bit value
 100   1        TL1 = 0x92;//low bit value
 101   1        TR1 = 0;//turn off timer 0
 102   1        
 103   1        //enable external interrupts
 104   1        EX1 = 1;
 105   1        EX0 = 1;
 106   1        
 107   1        countDownTimer(12);
 108   1        displayIntruder();
 109   1          while(1){
 110   2            //disarmedState();
 111   2            //updateTimerState();
 112   2            //armedState();
 113   2            //countdownState();
 114   2            //intruderState();
 115   2          }
 116   1          
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 3   

 117   1        
 118   1        
 119   1      
 120   1      
 121   1      }
 122          /**************************************************************/
 123          
 124          
 125          void disarmedState()
 126          {
 127   1      }
 128          void updateTimerState()
 129          {
 130   1      }
 131          void armedState()
 132          {
 133   1      }
 134          void countdownState()
 135          {
 136   1        countDownTimer(12);
 137   1      }
 138          void intruderState()
 139          {
 140   1        displayArmed();
 141   1      }
 142          
 143          
 144          
 145          
 146          ////////////////////////////////////////////////////////////////
 147          //               LCD  Helper Functions                        //
 148          ////////////////////////////////////////////////////////////////
 149          void updateTimer(int time)
 150          {
 151   1      }
*** WARNING C280 IN LINE 149 OF Home_Security_System.c: 'time': unreferenced local variable
 152          
 153          
 154          //setup LCD for required display
 155          void init_lcd(){
 156   1        //all instructions here are commands, not data
 157   1        
 158   1        write_to_lcd(0x38,COMMAND);
 159   1      
 160   1        write_to_lcd(0x0E,COMMAND);
 161   1        
 162   1        write_to_lcd(0x06,COMMAND);
 163   1        //clear display and return cursor to home position
 164   1        write_to_lcd(0x01,COMMAND);
 165   1      }
 166          
 167          void write_to_lcd(unsigned char value, bit mode){
 168   1        lcdready();
 169   1        ldata = value;
 170   1        rs = mode; //1 for data, 0 for command
 171   1        rw = 0;
 172   1        en = 1;
 173   1        MSDelay(1);
 174   1        en = 0;
 175   1      }
 176          void MSDelay(unsigned int itime){
 177   1        unsigned i, j;
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 4   

 178   1        for(i=0;i<itime;i++)
 179   1          for(j=0;j<1275;j++);
 180   1      
 181   1      }
 182          void lcdready(){
 183   1        busy = 1;
 184   1        en = 1;
 185   1        rs = 0;//command
 186   1        rw = 1;//read command
 187   1        while(busy){
 188   2          en = 0;
 189   2          MSDelay(1);
 190   2          en = 1;
 191   2        }
 192   1        en = 0;
 193   1        rw = 0;
 194   1      }
 195          
 196          void updateLCD()
 197          {
 198   1      }
 199          
 200          void displayArmed()
 201          {
 202   1        unsigned char code msg[]="ARMED";
 203   1        unsigned char i=0;                                                                                 
 204   1      
 205   1        //Writing to second line
 206   1        write_to_lcd(0xC0,COMMAND);
 207   1        
 208   1        while (msg[i]!='\0') 
 209   1         write_to_lcd(msg[i++],LCD_DATA);
 210   1      }
 211          void displayDisarmed()
 212          {
 213   1        unsigned char code msg[]="DISARMED";
 214   1        unsigned char i=0;                                                                                      
 215   1      
 216   1        //Writing to second line
 217   1        write_to_lcd(0xC0,COMMAND);
 218   1        
 219   1        while (msg[i]!='\0') 
 220   1         write_to_lcd(msg[i++],LCD_DATA);
 221   1      }
 222          void displayIntruder()
 223          {
 224   1        unsigned char code msg[]="INTRUDER!";
 225   1        unsigned char i=0;                                                                                    
 226   1      
 227   1        //Writing to second line
 228   1        write_to_lcd(0xC0,COMMAND);
 229   1        
 230   1        while (msg[i]!='\0') 
 231   1         write_to_lcd(msg[i++],LCD_DATA);
 232   1      }
 233          
 234          void turnOnLaser()
 235          {
 236   1      }
 237          void turnOffLaser()
 238          {
 239   1      }
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 5   

 240          void countDownTimer(int time)
 241          {
 242   1        unsigned int count;
 243   1        
 244   1        //Converting and separating to what was passed in
 245   1        char msb = (time/10)+48;
 246   1        char lsb = (time%10)+48;
 247   1        
 248   1        unsigned char code timer[]="Timer:NA seconds";
 249   1        unsigned char t = 0;                                                                            
 250   1        
 251   1        //Writing first line
 252   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
 253   1        while (timer[t]!='\0') 
 254   1         write_to_lcd(timer[t++],LCD_DATA);
 255   1        
 256   1        
 257   1        for (count = time; count >= 0; count--){    
 258   2          if (lsb < 0x30){
 259   3            lsb = 0x39;
 260   3            msb--;
 261   3            if (msb < 0x30){
 262   4              msb = 0x39;
 263   4            }
 264   3          }
 265   2          
 266   2          write_to_lcd(0x86,COMMAND); //Write to second line
 267   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 268   2          write_to_lcd(lsb,LCD_DATA);
 269   2          
 270   2          //Keeps both numbers at 00
 271   2          if (msb == 0x30 && lsb == 0x30)
 272   2          {
 273   3            break;
 274   3          }
 275   2          
 276   2          lsb--; //Deccrementing least significant bit
 277   2          
 278   2          delay(); //1 second delay  
 279   2        }
 280   1      }
 281          
 282          void updateTimerLEDs()
 283          {
 284   1      }
 285          void turnOnAlarm()
 286          {
 287   1      }
 288          void turnOffAlarm()
 289          {
 290   1      }
 291          void flashIntruder()
 292          {
 293   1      }
 294          void soundAlarm()
 295          {
 296   1      }
 297          void resetTimer()
 298          {
 299   1      }


C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 19:03:13 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    473    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
