C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HOME_SECURITY_SYSTEM
OBJECT MODULE PLACED IN .\Objects\Home_Security_System.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Home_Security_System.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\Home_Security_System.lst) TABS(2) OBJECT(.\Objects\Home_Security_System.obj)

line level    source

   1          //////////////////////////////////
   2          //     Home Security System     //
   3          //////////////////////////////////
   4          
   5          #include <reg51.h>
   6          
   7          
   8          #define COMMAND 0
   9          #define LCD_DATA 1
  10          
  11          //Declaring Port Pins
  12          //P0
  13          sbit ARM = P0^0;
  14          //P1
  15          sbit LED0 = P1^0;
  16          sbit LED1 = P1^1;
  17          sbit LaserSwitch = P1^2;
  18          sbit EncB = P1^3;
  19          sbit GREEN = P1^5;
  20          sbit YELLOW = P1^6;
  21          sbit RED = P1^7;
  22          //P2
  23          #define ldata P2
  24          sbit busy = P2^7; // connected to DB7 on the LCD
  25          //P3
  26          sbit EncA = P3^2;
  27          sbit BREAK = P3^3;
  28          sbit rw = P3^5;
  29          sbit rs = P3^6;
  30          sbit en = P3^7;
  31          
  32          //variables
  33          bit dir;//1 = cw, 0 = ccw
  34          unsigned int delayVal = 0;
  35          //Interrupt functions
  36          void timer1(void) interrupt 3{//50ms 
  37   1        TR1 = 0;//turn timer off
  38   1        delayVal = delayVal - 1;//decrease delay value
  39   1        TH1 = 0x4B;//initial values
  40   1        TL1 = 0x92;
  41   1      }
  42          void encoder() interrupt 0//
  43          {
  44   1        if(EncB == 1)
  45   1          dir = 1;
  46   1        else
  47   1          dir = 0;
  48   1      }
  49          void breakBeam() interrupt 2
  50          {
  51   1        
  52   1      }
  53          void delay()//delay 1 second
  54          {
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 2   

  55   1        delayVal = 20;
  56   1        while(delayVal > 0)
  57   1        {
  58   2          TR1 = 1;
  59   2        }
  60   1        TR1 = 0;
  61   1      }
  62          void delayHalf()//delay 0.5 second
  63          {
  64   1        delayVal = 10;
  65   1        while(delayVal > 0)
  66   1        {
  67   2          TR1 = 1;
  68   2        }
  69   1        TR1 = 0;
  70   1      }
  71          
  72          //State Functions
  73          void disarmedState();
  74          void updateTimerState();
  75          void armedState();
  76          void countdownState();
  77          void intruderState();
  78          
  79          //Function Prototypes
  80          void init_lcd();//initialize LCD
  81          void write_to_lcd(unsigned char value, bit mode);//write data or command
  82          void MSDelay(unsigned int itime);//delay 1 ms
  83          void lcdready(void);//check if lcd is ready to write to
  84          void updateTimer(int time);
  85          void updateLCD();
  86          void displayArmed();
  87          void displayDisarmed();
  88          void displayIntruder();
  89          void turnOnLaser();
  90          void turnOffLaser();
  91          void countDownTimer(int num);
  92          void updateTimerLEDs();
  93          void turnOnAlarm();
  94          void turnOffAlarm();
  95          void flashIntruder();
  96          void soundAlarm();
  97          void resetTimer();
  98          
  99          
 100          /**************************************************************/
 101          void main(){
 102   1        //Interrupt enable
 103   1        EA = 1;
 104   1        ET1 = 1;
 105   1        //Timer enable
 106   1        TMOD = 0x10;//timer 1 mode 1
 107   1        TH1 = 0x4B;//high bit value
 108   1        TL1 = 0x92;//low bit value
 109   1        TR1 = 0;//turn off timer 0
 110   1        
 111   1        //enable external interrupts
 112   1        EX1 = 1;
 113   1        EX0 = 1;
 114   1        //Delcare inputs and outputs
 115   1        //P0 = 0xFF;
 116   1        //P1 = 0x08;
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 3   

 117   1        //P3 = 0x0C;
 118   1        LED0 = 0;
 119   1        LED1 = 0;
 120   1        //turn off LEDS
 121   1        GREEN = 1;
 122   1        YELLOW = 1;
 123   1        RED = 1;
 124   1        
 125   1        init_lcd();
 126   1        //countDownTimer(12);
 127   1        //displayDisarmed();
 128   1        //countDownTimer(7);
 129   1        //intruderState();
 130   1          while(1){
 131   2              countDownTimer(12);
 132   2              intruderState();
 133   2            //disarmedState();
 134   2            //updateTimerState();
 135   2            //armedState();
 136   2            //countdownState();
 137   2            //intruderState();
 138   2          }
 139   1          
 140   1        
 141   1        
 142   1      
 143   1      
 144   1      }
 145          /**************************************************************/
 146          
 147          
 148          void disarmedState()
 149          {
 150   1      }
 151          void updateTimerState()
 152          {
 153   1      }
 154          void armedState()
 155          {
 156   1      }
 157          void countdownState()
 158          {
 159   1        countDownTimer(12);
 160   1      }
 161          void intruderState()
 162          {
 163   1        displayIntruder();
 164   1        delay();
 165   1        //displayArmed();
 166   1        for(;;)
 167   1        {
 168   2          LED0 = 1;
 169   2          LED1 = 0;
 170   2          delayHalf();
 171   2          LED0 = 0;
 172   2          LED1 = 1;
 173   2          delayHalf();
 174   2        }
 175   1      }
 176          
 177          
 178          
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 4   

 179          
 180          ////////////////////////////////////////////////////////////////
 181          //               LCD  Helper Functions                        //
 182          ////////////////////////////////////////////////////////////////
 183          void updateTimer(int time)
 184          {
 185   1      }
*** WARNING C280 IN LINE 183 OF Home_Security_System.c: 'time': unreferenced local variable
 186          
 187          
 188          //setup LCD for required display
 189          void init_lcd(){
 190   1        //all instructions here are commands, not data
 191   1        
 192   1        write_to_lcd(0x38,COMMAND);
 193   1      
 194   1        write_to_lcd(0x0E,COMMAND);
 195   1        
 196   1        write_to_lcd(0x06,COMMAND);
 197   1        //clear display and return cursor to home position
 198   1        write_to_lcd(0x01,COMMAND);
 199   1      }
 200          
 201          void write_to_lcd(unsigned char value, bit mode){
 202   1        lcdready();
 203   1        ldata = value;
 204   1        rs = mode; //1 for data, 0 for command
 205   1        rw = 0;
 206   1        en = 1;
 207   1        MSDelay(1);
 208   1        en = 0;
 209   1      }
 210          void MSDelay(unsigned int itime){
 211   1        unsigned i, j;
 212   1        for(i=0;i<itime;i++)
 213   1          for(j=0;j<1275;j++);
 214   1      
 215   1      }
 216          void lcdready(){
 217   1        busy = 1;
 218   1        en = 1;
 219   1        rs = 0;//command
 220   1        rw = 1;//read command
 221   1        while(busy){
 222   2          en = 0;
 223   2          MSDelay(1);
 224   2          en = 1;
 225   2        }
 226   1        en = 0;
 227   1        rw = 0;
 228   1      }
 229          
 230          void updateLCD()
 231          {
 232   1      }
 233          
 234          void displayArmed()
 235          {
 236   1        unsigned char code msg[]="ARMED";
 237   1        unsigned char i=0;                                                                                 
 238   1      
 239   1        //Writing to second line
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 5   

 240   1        write_to_lcd(0xC0,COMMAND);
 241   1        
 242   1        while (msg[i]!='\0') 
 243   1         write_to_lcd(msg[i++],LCD_DATA);
 244   1      }
 245          void displayDisarmed()
 246          {
 247   1        unsigned char code msg[]="DISARMED";
 248   1        unsigned char i=0;                                                                                      
 249   1      
 250   1        //Writing to second line
 251   1        write_to_lcd(0xC0,COMMAND);
 252   1        
 253   1        while (msg[i]!='\0') 
 254   1         write_to_lcd(msg[i++],LCD_DATA);
 255   1      }
 256          void displayIntruder()
 257          {
 258   1        unsigned char code msg[]="INTRUDER!";
 259   1        unsigned char i=0;                                                                                    
 260   1      
 261   1        //Writing to second line
 262   1        write_to_lcd(0xC0,COMMAND);
 263   1        
 264   1        while (msg[i]!='\0') 
 265   1         write_to_lcd(msg[i++],LCD_DATA);
 266   1      }
 267          
 268          void turnOnLaser()
 269          {
 270   1      }
 271          void turnOffLaser()
 272          {
 273   1      }
 274          void countDownTimer(int time)
 275          {
 276   1        unsigned int count;
 277   1        
 278   1        //Converting and separating to what was passed in
 279   1        char msb = (time/10)+48;
 280   1        char lsb = (time%10)+48;
 281   1        
 282   1        unsigned char code timer[]="Timer:NA seconds";
 283   1        unsigned char t = 0;                                                                            
 284   1        
 285   1        //Writing first line
 286   1        write_to_lcd(0x80,COMMAND); //Move to start of first line
 287   1        while (timer[t]!='\0') 
 288   1         write_to_lcd(timer[t++],LCD_DATA);
 289   1        
 290   1        
 291   1        for (count = time; count >= 0; count--){    
 292   2          if (lsb < 0x30){
 293   3            lsb = 0x39;
 294   3            msb--;
 295   3            if (msb < 0x30){
 296   4              msb = 0x39;
 297   4            }
 298   3          }
 299   2          
 300   2          
 301   2          write_to_lcd(0x86,COMMAND); //Write to second line
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 6   

 302   2          write_to_lcd(msb,LCD_DATA); //Writes left to right
 303   2          write_to_lcd(lsb,LCD_DATA);
 304   2          
 305   2          //turn on and off LEDS
 306   2          if(msb > 0x30 )//greater than 10, green
 307   2          {
 308   3            GREEN = 1;
 309   3            YELLOW = 0;
 310   3            RED = 0;
 311   3          }
 312   2          else
 313   2          {
 314   3            if(lsb >= 0x34 && lsb <= 0x36)//4-6 yellow
 315   3            {
 316   4              GREEN = 0;
 317   4              YELLOW = 1;
 318   4              RED = 0;
 319   4            }
 320   3            else if(lsb >= 0x30 && lsb <= 0x33)//0-3 red
 321   3            {
 322   4              GREEN = 0;
 323   4              YELLOW = 0;
 324   4              RED = 1;
 325   4            }
 326   3            else//7-9 green
 327   3            {
 328   4              GREEN = 1;
 329   4              YELLOW = 0;
 330   4              RED = 0;
 331   4            }
 332   3          }
 333   2          
 334   2          //Keeps both numbers at 00
 335   2          if (msb == 0x30 && lsb == 0x30)
 336   2          {
 337   3            break;
 338   3          }
 339   2          
 340   2          lsb--; //Deccrementing least significant bit
 341   2          
 342   2          delay(); //1 second delay  
 343   2        }
 344   1      }
 345          
 346          void updateTimerLEDs()
 347          {
 348   1      }
 349          void turnOnAlarm()
 350          {
 351   1      }
 352          void turnOffAlarm()
 353          {
 354   1      }
 355          void flashIntruder()
 356          {
 357   1      }
 358          void soundAlarm()
 359          {
 360   1      }
 361          void resetTimer()
 362          {
 363   1      }
C51 COMPILER V9.56.0.0   HOME_SECURITY_SYSTEM                                              11/30/2017 20:51:33 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    602    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
